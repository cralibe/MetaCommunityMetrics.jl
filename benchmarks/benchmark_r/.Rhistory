small_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
medium_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r)%>%
arrange(percentage_diff)
full_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
##Speedup for the DNCI with parallelComputing in R using the full dataset
DNCI_multigroup_result<-read.csv("../benchmarks/result/benchmark_result_full_df_julia.csv")%>%
filter(TestCase=="DNCI_multigroup_result")
DNCI_multigroup_result_p<-readRDS("../benchmarks/result/DNCI_full_result_with_parallelComputing.rds")
result_df<-data.frame(TestCase = "DNCI_multigroup_result",
Speedup = as.numeric(mean(DNCI_multigroup_result_p$time[[1]])) * 1e+3/
DNCI_multigroup_result$Time_median,
julia_memory = DNCI_multigroup_result$memory,
r_memory = as.numeric(DNCI_multigroup_result_p$mem_alloc) / 1024^2)
write.csv(result_df, "result/benchmark_DNCI_with_parallelComputing_full_df.csv")
View(full_result)
View(medium_result)
View(small_result)
View(full_result_memory)
View(medium_result_memory)
View(small_result_memory)
full_result_memory<-full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
medium_result_memory<-medium_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(medium_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
small_result_memory<-small_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(small_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
write.csv(small_result_memory, "result/small_df_memory.csv")
write.csv(medium_result_memory, "result/medium_df_memory.csv")
write.csv(full_result_memory, "result/full_df_memory.csv")
small_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
medium_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r)%>%
arrange(percentage_diff)
full_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
full_result_julia
full_result_memory<-full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))
full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))
full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))
full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))
# Create TestCase order based on the group order
test_case_order <- c(
# Beta Diversity
"beta_diversity_1", "beta_diversity_2", "beta_diversity_3",
# Spatial Beta Diversity
"spatial_beta_div_1", "spatial_beta_div_2", "spatial_beta_div_3",
# Temporal Beta Diversity
"temporal_beta_div_1", "temporal_beta_div_2", "temporal_beta_div_3",
# Dispersal-niche continuum index
"DNCI_multigroup_result",
# Occupied Patches Proportion
"prop_patches_result",
# Variability Metrics
"CV_meta_result",
# Hypervolume Estimation
"hypervolume_det_result",
# Hypervolume Dissimilarity
"hypervolume_dis_result"
)
#Memory
full_result_memory<-full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
full_result_memory
full_result_memory<-full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order))
full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order))
test_case_order <- c(
"Beta Diversity (Abundance, quant=true)",
"Beta Diversity (Abundance, quant=false)",
"Beta Diversity (Presence, quant=false)",
"Spatial Beta Diversity (Abundance, quant=true)",
"Spatial Beta Diversity (Abundance, quant=false)",
"Spatial Beta Diversity (Presence, quant=false)",
"Temporal Beta Diversity (Abundance, quant=true)",
"Temporal Beta Diversity (Abundance, quant=false)",
"Temporal Beta Diversity (Presence, quant=false)",
"Dispersal-niche continuum index",
"Occupied Patches Proportion",
"Variability Metrics",
"Hypervolume Estimation",
"Hypervolume Dissimilarity"
)
full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
#Memory
full_result_memory<-full_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(full_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
medium_result_memory<-medium_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(medium_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
small_result_memory<-small_result_julia%>%
select(TestCase, memory)%>%
rename(memory_julia=memory)%>%
left_join(small_result_r)%>%
select(TestCase, memory_julia, memory)%>%
rename(memory_r=memory)%>%
filter(!is.na(memory_r))%>%
mutate(TestCase = case_when(
TestCase == "beta_diversity_1" ~ "Beta Diversity (Abundance, quant=true)",
TestCase == "beta_diversity_2" ~ "Beta Diversity (Abundance, quant=false)",
TestCase == "beta_diversity_3" ~ "Beta Diversity (Presence, quant=false)",
TestCase == "spatial_beta_div_1" ~ "Spatial Beta Diversity (Abundance, quant=true)",
TestCase == "spatial_beta_div_2" ~ "Spatial Beta Diversity (Abundance, quant=false)",
TestCase == "spatial_beta_div_3" ~ "Spatial Beta Diversity (Presence, quant=false)",
TestCase == "temporal_beta_div_1" ~ "Temporal Beta Diversity (Abundance, quant=true)",
TestCase == "temporal_beta_div_2" ~ "Temporal Beta Diversity (Abundance, quant=false)",
TestCase == "temporal_beta_div_3" ~ "Temporal Beta Diversity (Presence, quant=false)",
TestCase == "DNCI_multigroup_result" ~ "Dispersal-niche continuum index",
TestCase == "prop_patches_result" ~ "Occupied Patches Proportion",
TestCase == "CV_meta_result" ~ "Variability Metrics",
TestCase == "hypervolume_det_result" ~ "Hypervolume Estimation",
TestCase == "hypervolume_dis_result" ~ "Hypervolume Dissimilarity",
TRUE ~ TestCase  # Keep original value if no match
))%>%
mutate(TestCase = factor(TestCase, levels = test_case_order)) %>%
arrange(TestCase)
write.csv(small_result_memory, "result/small_df_memory.csv")
write.csv(medium_result_memory, "result/medium_df_memory.csv")
write.csv(full_result_memory, "result/full_df_memory.csv")
small_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
medium_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r)%>%
arrange(percentage_diff)
full_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
full_result_memory
full_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
medium_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r)%>%
arrange(percentage_diff)
small_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
small_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
medium_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r)%>%
arrange(percentage_diff)
full_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
small_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
5.935669e-03
small_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
medium_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r)%>%
arrange(percentage_diff)
full_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
small_result_memory%>%
mutate(diff=memory_julia-memory_r)%>%
arrange(diff)
medium_result_memory%>%
mutate(diff=memory_julia-memory_r)%>%
arrange(diff)
full_result_memory%>%
mutate(diff=memory_julia-memory_r)%>%
arrange(diff)
#save te plot
ggsave("result/speedup.pdf", dpi=300, width = 10, height = 5, bg="white")
full_result_memory%>%
mutate(percentage_diff=(memory_julia-memory_r)/memory_r*100)%>%
arrange(percentage_diff)
medium_result_memory%>%
mutate(diff=memory_julia-memory_r)%>%
arrange(diff)
small_result_memory%>%
mutate(diff=memory_julia-memory_r)%>%
arrange(diff)
1.925782e+02
full_result_memory%>%
mutate(diff=memory_julia-memory_r)%>%
arrange(diff)
71.983283997/781.92199707
781.92199707/71.983283997
(781.92199707-71.983283997)/71.983283997
View(
result_df)
median_ci_all_save
543/60
192/11
193/11
benchmark_result_small_df
<- data.frame()
median_ci_all
all_time_full_julia
full_result_julia
small_result_julia
small_result_r
medium_result_julia
medium_result_r
View(median_ci_all)
View(median_ci_all_save)
full_result_julia
full_result_r
