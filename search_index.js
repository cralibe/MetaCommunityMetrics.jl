var documenterSearchIndex = {"docs":
[{"location":"#MetaCommunityMetrics-Documentation","page":"MetaCommunityMetrics Documentation","title":"MetaCommunityMetrics Documentation","text":"","category":"section"},{"location":"","page":"MetaCommunityMetrics Documentation","title":"MetaCommunityMetrics Documentation","text":"CurrentModule = MetaCommunityMetrics","category":"page"},{"location":"","page":"MetaCommunityMetrics Documentation","title":"MetaCommunityMetrics Documentation","text":"beta_diversity(mat::Matrix; quant::Bool)\nmean_spatial_beta_div(abundance::AbstractVector, time::AbstractVector, patch::Union{AbstractVector, String}, species::Union{AbstractVector, String}; quant::Bool)\nmean_temporal_beta_div(abundance::AbstractVector, time::AbstractVector, patch::Union{AbstractVector, String}, species::Union{AbstractVector, String};quant::Bool)","category":"page"},{"location":"#MetaCommunityMetrics.beta_diversity-Tuple{Matrix{T} where T}","page":"MetaCommunityMetrics Documentation","title":"MetaCommunityMetrics.beta_diversity","text":"beta_diversity(mat::Matrix; quant::Bool) -> DataFrame\n\nCalculate beta diversity for a given biodiversity data. This function supports both binary (presence/absence) and quantitative data. For binary data, the function calculates Podani family, Jaccard-based indices. For quantitative data, the function calculates Podani family, Ruzicka-based indices. The function returns a DataFrame containing the calculated beta diversity indices.  Empty patches have to be removed before calculation. Please refer to Example.jl for more details.\n\nArguments\n\nmat::Matrix: A matrix where each row represents a sample and each column represents a species. The elements of the matrix should represent the presence/absence or abundance of species.\nquant::Bool: A boolean flag that indicates whether the data is quantitative. Default is false, which means the data is treated as binary.\n\nReturns\n\nDataFrame: A DataFrame with the following columns:\nBDtotal: Total beta diversity, which captures the overall dissimilarity between local communities.\nRepl: Replacement component of diversity, which reflects how many species are different in one site compared to another, ignoring the species that are mere additions or subtractions.\nRichDif: Richness difference component of diversity, which captures the disparity in biodiversity in terms of the count of species present, without taking into account the specific identities or distributions of those species.\n\n\n\n\n\n","category":"method"},{"location":"#MetaCommunityMetrics.mean_spatial_beta_div-Tuple{AbstractVector{T} where T, AbstractVector{T} where T, Union{String, AbstractVector{T} where T}, Union{String, AbstractVector{T} where T}}","page":"MetaCommunityMetrics Documentation","title":"MetaCommunityMetrics.mean_spatial_beta_div","text":"mean_spatial_beta_div(abundance::AbstractVector, time::AbstractVector, patch::Union{AbstractVector, String}, species::Union{AbstractVector, String}; quant::Bool) -> DataFrame\n\nCalculate the mean spatial beta diversity components of a metacommunity over time based on species abundances or presence-absences.\n\nArguments\n\nabundance::Vector: A vector containing abundance data for each species across different samples.\ntime::Vector: A vector indicating the time each sample was taken.\npatch::Vector: A vector indicating the spatial location (patch) of each sample.\nspecies::Vector: A vector indicating the species associated with each abundance entry.\nquant::Bool: Optional boolean flag to indicate whether the data should be treated as quantitative (default is false, treating data as binary presence/absence).\n\nReturns\n\nDataFrame: A DataFrame containing the mean values of total beta diversity, replacement, and richness difference components across all time points. Columns are mean_spatial_BDtotal, mean_spatial_Repl, and mean_spatial_RichDif.\n\n\n\n\n\n","category":"method"},{"location":"#MetaCommunityMetrics.mean_temporal_beta_div-Tuple{AbstractVector{T} where T, AbstractVector{T} where T, Union{String, AbstractVector{T} where T}, Union{String, AbstractVector{T} where T}}","page":"MetaCommunityMetrics Documentation","title":"MetaCommunityMetrics.mean_temporal_beta_div","text":"mean_temporal_beta_div(abundance::AbstractVector, time::AbstractVector, patch::Union{AbstractVector, String}, species::Union{AbstractVector, String};quant::Bool) -> DataFrame\n\nCalculate the mean temporal beta diversity components acorss all patches based on species abundances or presence-absences.\n\nArguments\n\nabundance::Vector: A vector containing abundance data for each species across different samples.\ntime::Vector: A vector indicating the time each sample was taken.\npatch::Vector: A vector indicating the spatial location (patch) of each sample.\nspecies::Vector: A vector indicating the species associated with each abundance entry.\nquant::Bool: Optional boolean flag to indicate whether the data should be treated as quantitative (default is false, treating data as binary presence/absence).\n\nReturns\n\nDataFrame: A DataFrame containing the mean values of total beta diversity, replacement, and richness difference components across all pactches. Columns are mean_temporal_BDtotal, mean_temporal_Repl, and mean_temporal_RichDif.\n\n\n\n\n\n","category":"method"}]
}
